name: .NET Core

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.101
        source-url: https://nuget.pkg.github.com/KloderGit/index.json
      env:
        NUGET_AUTH_TOKEN: ${{secrets.GITHUB_TOKEN}}
        APP_VERSION22: $(echo "$GITHUB_REPOSITORY" | awk -F / '{print $2}' | sed -e "s/:refs//")
       
    - name: Build with dotnet
      run: dotnet publish --configuration Release   


    - name: Define Version
      run: |
        export APP_VERSION="$(monodis --assembly ./GitHubBuildTest/bin/Release/netcoreapp3.1/publish/GitHubBuildTest.dll | grep Version | sed 's/\s\+/,/g' | cut -d , -f2)"
        echo ::set-env name=REPOSITORY_NAME::$(echo "$GITHUB_REPOSITORY" | awk -F / '{print $2}' | sed -e "s/:refs//")
        echo "::set-env name=AppVersion::${APP_VERSION}"

    - name: Printenv
      run: printenv | grep AppVersion
      
    - name: Ls
      run: |
        ls
        echo '------------------------------'
        ls GitHubBuildTest
        echo '------------------------------'
        ls ./GitHubBuildTest/bin/Release/netcoreapp3.1/publish/
        stat ./GitHubBuildTest/bin/Release/netcoreapp3.1/publish/GitHubBuildTest.dll
        echo '---------------ext---------------'
        echo ${{ env.AppVersion }}
        echo echo "$GITHUB_REPOSITORY" | awk -F / '{print $2}' | sed -e "s/:refs//"

